!function(){var e={};var n=function(n){var r=e[n];if(null==r)throw new Error("Could not resolve bundle with id "+n);return r};(function(n){for(var r=Object.keys(n),t=0;t<r.length;t++)e[r[t]]=n[r[t]]})(JSON.parse('{"87b92894525eb0aa":"fluids.74c86f89.js","9b6ee6e7a4591eb2":"LDR_LLL1_0.ff0096bc.png"}'));var r,t=null;var i,o=function(){return t||(t=function(){try{throw new Error}catch(n){var e=(""+n.stack).match(/(https?|file|ftp):\/\/[^)\n]+/g);if(e)return(""+e[0]).replace(/^((?:https?|file|ftp):\/\/.+)\/[^/]+$/,"$1")+"/"}return"/"}()),t},a=n;function u(e){if(""===e)return".";var n="/"===e[e.length-1]?e.slice(0,e.length-1):e,r=n.lastIndexOf("/");return-1===r?".":n.slice(0,r)}function f(e,n){if(e===n)return"";var r=e.split("/");"."===r[0]&&r.shift();var t,i,o=n.split("/");for("."===o[0]&&o.shift(),t=0;(t<o.length||t<r.length)&&null==i;t++)r[t]!==o[t]&&(i=t);var a=[];for(t=0;t<r.length-i;t++)a.push("..");return o.length>i&&a.push.apply(a,o.slice(i)),a.join("/")}function v(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function l(e,n){for(var r=0;r<n.length;r++){var t=n[r];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function c(e,n,r){return n&&l(e.prototype,n),r&&l(e,r),e}(i=function(e,n){return f(u(a(e)),a(n))})._dirname=u,i._relative=f,r=o()+i("87b92894525eb0aa","9b6ee6e7a4591eb2");var m=document.querySelector("#cc");ye();var s={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.1,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!0,BACK_COLOR:{r:10,g:10,b:10},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:2,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1};function h(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}window.enableFluids=function(){s.PAUSED=!1,be(parseInt(20*Math.random())+5)};var T=[],d=[],g=function(e){var n,r,t={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},i=e.getContext("webgl2",t),o=!!i;o||(i=e.getContext("webgl",t)||e.getContext("experimental-webgl",t));o?(i.getExtension("EXT_color_buffer_float"),r=i.getExtension("OES_texture_float_linear")):(n=i.getExtension("OES_texture_half_float"),r=i.getExtension("OES_texture_half_float_linear"));i.clearColor(0,0,0,1);var a,u,f,v=o?i.HALF_FLOAT:n.HALF_FLOAT_OES;o?(a=R(i,i.RGBA16F,i.RGBA,v),u=R(i,i.RG16F,i.RG,v),f=R(i,i.R16F,i.RED,v)):(a=R(i,i.RGBA,i.RGBA,v),u=R(i,i.RGBA,i.RGBA,v),f=R(i,i.RGBA,i.RGBA,v));return{gl:i,ext:{formatRGBA:a,formatRG:u,formatR:f,halfFloatTexType:v,supportLinearFiltering:r}}}(m),x=g.gl,E=g.ext;function R(e,n,r,t){if(!function(e,n,r,t){var i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,r,t,null);var o=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0),e.checkFramebufferStatus(e.FRAMEBUFFER)==e.FRAMEBUFFER_COMPLETE}(e,n,r,t))switch(n){case e.R16F:return R(e,e.RG16F,e.RG,t);case e.RG16F:return R(e,e.RGBA16F,e.RGBA,t);default:return null}return{internalFormat:n,format:r}}/Mobi|Android/i.test(navigator.userAgent)&&(s.DYE_RESOLUTION=512),E.supportLinearFiltering||(s.DYE_RESOLUTION=512,s.SHADING=!1,s.BLOOM=!1,s.SUNRAYS=!1);var p=function(){function e(n,r){v(this,e),this.vertexShader=n,this.fragmentShaderSource=r,this.programs=[],this.activeProgram=null,this.uniforms=[]}return c(e,[{key:"setKeywords",value:function(e){for(var n=0,r=0;r<e.length;r++)n+=Oe(e[r]);var t=this.programs[n];if(null==t){var i=A(x.FRAGMENT_SHADER,this.fragmentShaderSource,e);t=D(this.vertexShader,i),this.programs[n]=t}t!=this.activeProgram&&(this.uniforms=_(t),this.activeProgram=t)}},{key:"bind",value:function(){x.useProgram(this.activeProgram)}}]),e}(),S=function(){function e(n,r){v(this,e),this.uniforms={},this.program=D(n,r),this.uniforms=_(this.program)}return c(e,[{key:"bind",value:function(){x.useProgram(this.program)}}]),e}();function D(e,n){var r=x.createProgram();if(x.attachShader(r,e),x.attachShader(r,n),x.linkProgram(r),!x.getProgramParameter(r,x.LINK_STATUS))throw x.getProgramInfoLog(r);return r}function _(e){for(var n=[],r=x.getProgramParameter(e,x.ACTIVE_UNIFORMS),t=0;t<r;t++){var i=x.getActiveUniform(e,t).name;n[i]=x.getUniformLocation(e,i)}return n}function A(e,n,r){n=function(e,n){if(null==n)return e;var r="";return n.forEach((function(e){r+="#define "+e+"\n"})),r+e}(n,r);var t=x.createShader(e);if(x.shaderSource(t,n),x.compileShader(t),!x.getShaderParameter(t,x.COMPILE_STATUS))throw x.getShaderInfoLog(t);return t}var y,b,U,L,w,F,O,N,B,I,P=A(x.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),M=A(x.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),C=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),X=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),z=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),G=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),Y=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),H=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),V=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),k=A(x.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),W=A(x.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),q=A(x.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),K=A(x.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",E.supportLinearFiltering?null:["MANUAL_FILTERING"]),j=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),$=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),J=A(x.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),Q=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),Z=A(x.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),ee=(x.bindBuffer(x.ARRAY_BUFFER,x.createBuffer()),x.bufferData(x.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),x.STATIC_DRAW),x.bindBuffer(x.ELEMENT_ARRAY_BUFFER,x.createBuffer()),x.bufferData(x.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),x.STATIC_DRAW),x.vertexAttribPointer(0,2,x.FLOAT,!1,0,0),x.enableVertexAttribArray(0),function(e){x.bindFramebuffer(x.FRAMEBUFFER,e),x.drawElements(x.TRIANGLES,6,x.UNSIGNED_SHORT,0)}),ne=[],re=function(e){var n=x.createTexture();x.bindTexture(x.TEXTURE_2D,n),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_MIN_FILTER,x.LINEAR),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_MAG_FILTER,x.LINEAR),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_WRAP_S,x.REPEAT),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_WRAP_T,x.REPEAT),x.texImage2D(x.TEXTURE_2D,0,x.RGB,1,1,0,x.RGB,x.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var r={texture:n,width:1,height:1,attach:function(e){return x.activeTexture(x.TEXTURE0+e),x.bindTexture(x.TEXTURE_2D,n),e}},t=new Image;return t.onload=function(){r.width=t.width,r.height=t.height,x.bindTexture(x.TEXTURE_2D,n),x.texImage2D(x.TEXTURE_2D,0,x.RGB,x.RGB,x.UNSIGNED_BYTE,t)},t.src=e,r}((B=r)&&B.__esModule?B.default:B),te=new S(M,C),ie=new S(P,X),oe=new S(P,z),ae=new S(P,G),ue=new S(P,Y),fe=new S(P,H),ve=new S(P,V),le=new S(P,k),ce=new S(P,W),me=new S(P,q),se=new S(P,K),he=new S(P,j),Te=new S(P,$),de=new S(P,J),ge=new S(P,Q),xe=new S(P,Z),Ee=new p(P,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function Re(){var e=we(s.SIM_RESOLUTION),n=we(s.DYE_RESOLUTION),r=E.halfFloatTexType,t=E.formatRGBA,i=E.formatRG,o=E.formatR,a=E.supportLinearFiltering?x.LINEAR:x.NEAREST;y=null==y?Se(n.width,n.height,t.internalFormat,t.format,r,a):De(y,n.width,n.height,t.internalFormat,t.format,r,a),b=null==b?Se(e.width,e.height,i.internalFormat,i.format,r,a):De(b,e.width,e.height,i.internalFormat,i.format,r,a),U=pe(e.width,e.height,o.internalFormat,o.format,r,x.NEAREST),L=pe(e.width,e.height,o.internalFormat,o.format,r,x.NEAREST),w=Se(e.width,e.height,o.internalFormat,o.format,r,x.NEAREST),function(){var e=we(s.BLOOM_RESOLUTION),n=E.halfFloatTexType,r=E.formatRGBA,t=E.supportLinearFiltering?x.LINEAR:x.NEAREST;F=pe(e.width,e.height,r.internalFormat,r.format,n,t),ne.length=0;for(var i=0;i<s.BLOOM_ITERATIONS;i++){var o=e.width>>i+1,a=e.height>>i+1;if(o<2||a<2)break;var u=pe(o,a,r.internalFormat,r.format,n,t);ne.push(u)}}(),function(){var e=we(s.SUNRAYS_RESOLUTION),n=E.halfFloatTexType,r=E.formatR,t=E.supportLinearFiltering?x.LINEAR:x.NEAREST;O=pe(e.width,e.height,r.internalFormat,r.format,n,t),N=pe(e.width,e.height,r.internalFormat,r.format,n,t)}()}function pe(e,n,r,t,i,o){x.activeTexture(x.TEXTURE0);var a=x.createTexture();x.bindTexture(x.TEXTURE_2D,a),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_MIN_FILTER,o),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_MAG_FILTER,o),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_WRAP_S,x.CLAMP_TO_EDGE),x.texParameteri(x.TEXTURE_2D,x.TEXTURE_WRAP_T,x.CLAMP_TO_EDGE),x.texImage2D(x.TEXTURE_2D,0,r,e,n,0,t,i,null);var u=x.createFramebuffer();return x.bindFramebuffer(x.FRAMEBUFFER,u),x.framebufferTexture2D(x.FRAMEBUFFER,x.COLOR_ATTACHMENT0,x.TEXTURE_2D,a,0),x.viewport(0,0,e,n),x.clear(x.COLOR_BUFFER_BIT),{texture:a,fbo:u,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:function(e){return x.activeTexture(x.TEXTURE0+e),x.bindTexture(x.TEXTURE_2D,a),e}}}function Se(e,n,r,t,i,o){var a=pe(e,n,r,t,i,o),u=pe(e,n,r,t,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap:function(){var e=a;a=u,u=e}}}function De(e,n,r,t,i,o,a){return e.width==n&&e.height==r||(e.read=function(e,n,r,t,i,o,a){var u=pe(n,r,t,i,o,a);return ie.bind(),x.uniform1i(ie.uniforms.uTexture,e.attach(0)),ee(u.fbo),u}(e.read,n,r,t,i,o,a),e.write=pe(n,r,t,i,o,a),e.width=n,e.height=r,e.texelSizeX=1/n,e.texelSizeY=1/r),e}I=[],s.SHADING&&I.push("SHADING"),s.BLOOM&&I.push("BLOOM"),s.SUNRAYS&&I.push("SUNRAYS"),Ee.setKeywords(I),Re();var _e=Date.now(),Ae=0;function ye(){var e=Fe(m.clientWidth),n=Fe(m.clientHeight);return(m.width!=e||m.height!=n)&&(m.width=e,m.height=n,!0)}function be(e){for(var n=0;n<e;n++){var r=generateColor();r.r*=10,r.g*=10,r.b*=10;var t=Math.random(),i=Math.random(),o=1e3*(Math.random()-.5),a=1e3*(Math.random()-.5);splat(t,i,o,a,r)}}function Ue(e,n,r,t){e.id=n,e.down=!0,e.moved=!1,e.texcoordX=r/m.width,e.texcoordY=t/m.height,e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.deltaX=0,e.deltaY=0,e.color=generateColor()}function Le(e,n,r){e.prevTexcoordX=e.texcoordX,e.prevTexcoordY=e.texcoordY,e.texcoordX=n/m.width,e.texcoordY=r/m.height,e.deltaX=function(e){var n=m.width/m.height;n<1&&(e*=n);return e}(e.texcoordX-e.prevTexcoordX),e.deltaY=function(e){var n=m.width/m.height;n>1&&(e/=n);return e}(e.texcoordY-e.prevTexcoordY),e.moved=Math.abs(e.deltaX)>0||Math.abs(e.deltaY)>0}function we(e){var n=x.drawingBufferWidth/x.drawingBufferHeight;n<1&&(n=1/n);var r=Math.round(e),t=Math.round(e*n);return x.drawingBufferWidth>x.drawingBufferHeight?{width:t,height:r}:{width:r,height:t}}function Fe(e){return Math.floor(e)}function Oe(e){if(0==e.length)return 0;for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r),n|=0;return n}!function e(){var n=function(){var e=Date.now(),n=(e-_e)/1e3;return n=Math.min(n,.016666),_e=e,n}();ye()&&Re();(function(e){if(!s.COLORFUL)return;(Ae+=e*s.COLOR_UPDATE_SPEED)>=1&&(n=Ae,Ae=0==(t=1-(r=0))?r:(n-r)%t+r,T.forEach((function(e){e.color=generateColor()})));var n,r,t})(n),s.PAUSED||(function(){d.length>0&&be(d.pop());T.forEach((function(e){var n,r,t;e.moved&&(e.moved=!1,r=(n=e).deltaX*s.SPLAT_FORCE,t=n.deltaY*s.SPLAT_FORCE,splat(n.texcoordX,n.texcoordY,r,t,n.color))}))}(),function(e){x.disable(x.BLEND),x.viewport(0,0,b.width,b.height),Te.bind(),x.uniform2f(Te.uniforms.texelSize,b.texelSizeX,b.texelSizeY),x.uniform1i(Te.uniforms.uVelocity,b.read.attach(0)),ee(L.fbo),de.bind(),x.uniform2f(de.uniforms.texelSize,b.texelSizeX,b.texelSizeY),x.uniform1i(de.uniforms.uVelocity,b.read.attach(0)),x.uniform1i(de.uniforms.uCurl,L.attach(1)),x.uniform1f(de.uniforms.curl,s.CURL),x.uniform1f(de.uniforms.dt,e),ee(b.write.fbo),b.swap(),he.bind(),x.uniform2f(he.uniforms.texelSize,b.texelSizeX,b.texelSizeY),x.uniform1i(he.uniforms.uVelocity,b.read.attach(0)),ee(U.fbo),oe.bind(),x.uniform1i(oe.uniforms.uTexture,w.read.attach(0)),x.uniform1f(oe.uniforms.value,s.PRESSURE),ee(w.write.fbo),w.swap(),ge.bind(),x.uniform2f(ge.uniforms.texelSize,b.texelSizeX,b.texelSizeY),x.uniform1i(ge.uniforms.uDivergence,U.attach(0));for(var n=0;n<s.PRESSURE_ITERATIONS;n++)x.uniform1i(ge.uniforms.uPressure,w.read.attach(1)),ee(w.write.fbo),w.swap();xe.bind(),x.uniform2f(xe.uniforms.texelSize,b.texelSizeX,b.texelSizeY),x.uniform1i(xe.uniforms.uPressure,w.read.attach(0)),x.uniform1i(xe.uniforms.uVelocity,b.read.attach(1)),ee(b.write.fbo),b.swap(),se.bind(),x.uniform2f(se.uniforms.texelSize,b.texelSizeX,b.texelSizeY),E.supportLinearFiltering||x.uniform2f(se.uniforms.dyeTexelSize,b.texelSizeX,b.texelSizeY);var r=b.read.attach(0);x.uniform1i(se.uniforms.uVelocity,r),x.uniform1i(se.uniforms.uSource,r),x.uniform1f(se.uniforms.dt,e),x.uniform1f(se.uniforms.dissipation,s.VELOCITY_DISSIPATION),ee(b.write.fbo),b.swap(),x.viewport(0,0,y.width,y.height),E.supportLinearFiltering||x.uniform2f(se.uniforms.dyeTexelSize,y.texelSizeX,y.texelSizeY);x.uniform1i(se.uniforms.uVelocity,b.read.attach(0)),x.uniform1i(se.uniforms.uSource,y.read.attach(1)),x.uniform1f(se.uniforms.dissipation,s.DENSITY_DISSIPATION),ee(y.write.fbo),y.swap()}(n));(function(e){s.BLOOM&&function(e,n){if(ne.length<2)return;var r=n;x.disable(x.BLEND),ue.bind();var t=s.BLOOM_THRESHOLD*s.BLOOM_SOFT_KNEE+1e-4,i=s.BLOOM_THRESHOLD-t,o=2*t,a=.25/t;x.uniform3f(ue.uniforms.curve,i,o,a),x.uniform1f(ue.uniforms.threshold,s.BLOOM_THRESHOLD),x.uniform1i(ue.uniforms.uTexture,e.attach(0)),x.viewport(0,0,r.width,r.height),ee(r.fbo),fe.bind();for(var u=0;u<ne.length;u++){var f=ne[u];x.uniform2f(fe.uniforms.texelSize,r.texelSizeX,r.texelSizeY),x.uniform1i(fe.uniforms.uTexture,r.attach(0)),x.viewport(0,0,f.width,f.height),ee(f.fbo),r=f}x.blendFunc(x.ONE,x.ONE),x.enable(x.BLEND);for(var v=ne.length-2;v>=0;v--){var l=ne[v];x.uniform2f(fe.uniforms.texelSize,r.texelSizeX,r.texelSizeY),x.uniform1i(fe.uniforms.uTexture,r.attach(0)),x.viewport(0,0,l.width,l.height),ee(l.fbo),r=l}x.disable(x.BLEND),ve.bind(),x.uniform2f(ve.uniforms.texelSize,r.texelSizeX,r.texelSizeY),x.uniform1i(ve.uniforms.uTexture,r.attach(0)),x.uniform1f(ve.uniforms.intensity,s.BLOOM_INTENSITY),x.viewport(0,0,n.width,n.height),ee(n.fbo)}(y.read,F);s.SUNRAYS&&(n=y.read,r=y.write,t=O,x.disable(x.BLEND),le.bind(),x.uniform1i(le.uniforms.uTexture,n.attach(0)),x.viewport(0,0,r.width,r.height),ee(r.fbo),ce.bind(),x.uniform1f(ce.uniforms.weight,s.SUNRAYS_WEIGHT),x.uniform1i(ce.uniforms.uTexture,r.attach(0)),x.viewport(0,0,t.width,t.height),ee(t.fbo),function(e,n,r){te.bind();for(var t=0;t<r;t++)x.uniform2f(te.uniforms.texelSize,e.texelSizeX,0),x.uniform1i(te.uniforms.uTexture,e.attach(0)),ee(n.fbo),x.uniform2f(te.uniforms.texelSize,0,e.texelSizeY),x.uniform1i(te.uniforms.uTexture,n.attach(0)),ee(e.fbo)}(O,N,1));var n,r,t;null!=e&&s.TRANSPARENT?x.disable(x.BLEND):(x.blendFunc(x.ONE,x.ONE_MINUS_SRC_ALPHA),x.enable(x.BLEND));var i=null==e?x.drawingBufferWidth:e.width,o=null==e?x.drawingBufferHeight:e.height;x.viewport(0,0,i,o);var a=null==e?null:e.fbo;(function(e,n){ae.bind(),x.uniform4f(ae.uniforms.color,n.r,n.g,n.b,1),ee(e)})(a,(u=s.BACK_COLOR,{r:u.r/255,g:u.g/255,b:u.b/255})),function(e,n,r){Ee.bind(),s.SHADING&&x.uniform2f(Ee.uniforms.texelSize,1/n,1/r);if(x.uniform1i(Ee.uniforms.uTexture,y.read.attach(0)),s.BLOOM){x.uniform1i(Ee.uniforms.uBloom,F.attach(1)),x.uniform1i(Ee.uniforms.uDithering,re.attach(2));var t=function(e,n,r){return{x:n/e.width,y:r/e.height}}(re,n,r);x.uniform2f(Ee.uniforms.ditherScale,t.x,t.y)}s.SUNRAYS&&x.uniform1i(Ee.uniforms.uSunrays,O.attach(3));ee(e)}(a,i,o);var u})(null),requestAnimationFrame(e)}(),window.splat=function(e,n,r,t,i){x.viewport(0,0,b.width,b.height),me.bind(),x.uniform1i(me.uniforms.uTarget,b.read.attach(0)),x.uniform1f(me.uniforms.aspectRatio,m.width/m.height),x.uniform2f(me.uniforms.point,e,n),x.uniform3f(me.uniforms.color,r,t,0),x.uniform1f(me.uniforms.radius,function(e){var n=m.width/m.height;n>1&&(e*=n);return e}(s.SPLAT_RADIUS/100)),ee(b.write.fbo),b.swap(),x.viewport(0,0,y.width,y.height),x.uniform1i(me.uniforms.uTarget,y.read.attach(0)),x.uniform3f(me.uniforms.color,i.r,i.g,i.b),ee(y.write.fbo),y.swap()},window.fluidsStartPointers=function(e){for(;e.length>=T.length;)T.push(new h);for(var n=0;n<e.length;n++){var r=e[n].x,t=e[n].y;Ue(T[n],e[n].identifier,r,t)}},window.fluidsMovePointers=function(e){for(var n=0;n<e.length;n++){var r=T[n];if(r.down)Le(r,e[n].x,e[n].y)}},window.generateColor=function(){var e=function(e,n,r){var t,i,o,a,u,f,v,l;switch(a=Math.floor(6*e),f=r*(1-n),v=r*(1-(u=6*e-a)*n),l=r*(1-(1-u)*n),a%6){case 0:t=r,i=l,o=f;break;case 1:t=v,i=r,o=f;break;case 2:t=f,i=r,o=l;break;case 3:t=f,i=v,o=r;break;case 4:t=l,i=f,o=r;break;case 5:t=r,i=f,o=v}return{r:t,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}}();
//# sourceMappingURL=fluids.74c86f89.js.map
